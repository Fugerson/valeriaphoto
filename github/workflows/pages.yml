  Перейти к содержимому
    Журнал чата

                                            Вы сказали:
    <?php
    // =============================================================
    // Valeria Photo — Single Page Portfolio (index.php)
                                            // Tech: PHP + HTML + CSS + jQuery (no heavy deps)
                                            // Notes:
    //  - Single-file build for quick deploy.
    //  - Configure EMAIL and other settings below.
    //  - Uses mail() by default. For SMTP/PHPMailer, see stub at bottom.
                                            //  - Multi-language: EN / UK (Ukrainian). Uses data-i18n attributes.
                                            //  - Security: CSRF token (session), honeypot, basic sanitization.
    //  - BEM-style classes, minimalist design, responsive, soft animations.
                                            //  - SEO: canonical, OG/Twitter cards, JSON-LD (Person/LocalBusiness/Offers/WebSite), robots, favicon.
                                            //  - Marketing: UTM capture -> hidden form fields -> appears in email.
    // =============================================================
    
    session_start();
    
    // ----------------------------
    // CONFIG
    // ----------------------------
    $CONFIG = [
    'site_name'   => 'Valeria Photo',
    'brand'       => 'Valeria Photo',
    'city'        => 'Одеса',
    'currency'    => '₴', // UAH symbol
    'admin_email' => 'hello@valeriaphoto.com', // TODO: replace with your email
    'lang_default'=> 'uk', // 'en' or 'uk'
  ];
    
    // Canonical URL (no query params)
                                            $SCHEME = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on') ? 'https' : 'http';
    $HOST = $_SERVER['HTTP_HOST'] ?? 'localhost';
    $REQUEST_URI = strtok($_SERVER['REQUEST_URI'] ?? '/', '?');
    $canonical = $SCHEME . '://' . $HOST . $REQUEST_URI;
    
    // ----------------------------
    // CSRF TOKEN
    // ----------------------------
    if (empty($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
  }
    $csrf_token = $_SESSION['csrf_token'];
    
    // ----------------------------
    // HELPERS
    // ----------------------------
    function sanitize_text($v){
    $v = trim($v);
    $v = strip_tags($v);
    $v = preg_replace('/[
  ]+/', ' ', $v); // prevent header injection
    return $v;
  }

    function is_human($honeypot){ return empty($honeypot); }
    function valid_email($email){ return (bool)filter_var($email, FILTER_VALIDATE_EMAIL); }
    
    // ----------------------------
    // FORM PROCESSING
    // ----------------------------
    $form_errors = [];
    $form_success = false;
    
    if ($_SERVER['REQUEST_METHOD'] === 'POST' && ($_POST['form_name'] ?? '') === 'booking') {
    // CSRF
    if (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {
    $form_errors[] = 'Invalid session token.';
    }

    // Honeypot
    if (!is_human($_POST['company'] ?? '')) {
    $form_errors[] = 'Spam detected.';
    }

    // Fields
    $name     = sanitize_text($_POST['name'] ?? '');
    $email    = sanitize_text($_POST['email'] ?? '');
    $phone    = sanitize_text($_POST['phone'] ?? '');
    $type     = sanitize_text($_POST['shoot_type'] ?? '');
    $date     = sanitize_text($_POST['date'] ?? '');
    $message  = sanitize_text($_POST['message'] ?? '');
    $agree    = isset($_POST['agree']);

    // UTM
    $utm_source   = sanitize_text($_POST['utm_source'] ?? '');
    $utm_medium   = sanitize_text($_POST['utm_medium'] ?? '');
    $utm_campaign = sanitize_text($_POST['utm_campaign'] ?? '');
    $utm_content  = sanitize_text($_POST['utm_content'] ?? '');
    $utm_term     = sanitize_text($_POST['utm_term'] ?? '');
    $referrer     = sanitize_text($_POST['referrer'] ?? '');

    if ($name === '') $form_errors[] = 'Please enter your name.';
    if (!valid_email($email)) $form_errors[] = 'Please enter a valid email address.';
    if ($agree !== true) $form_errors[] = 'Please accept the policy.';

    if (!$form_errors) {
    // Build email
    $to = $CONFIG['admin_email'];
    $subject = 'New Booking Request — ' . $CONFIG['brand'];
                                            $body  = "Name: {$name}
    ";
        $body .= "Email: {$email}
    ";
        $body .= "Phone: {$phone}
    ";
        $body .= "Type: {$type}
    ";
        $body .= "Date: {$date}
    ";
        $body .= "Message: {$message}

    ";
        if ($utm_source || $utm_medium || $utm_campaign || $utm_content || $utm_term || $referrer) {
            $body .= "— Marketing —
    ";
            if($utm_source)   $body .= "utm_source: {$utm_source}
    ";
            if($utm_medium)   $body .= "utm_medium: {$utm_medium}
    ";
            if($utm_campaign) $body .= "utm_campaign: {$utm_campaign}
    ";
            if($utm_content)  $body .= "utm_content: {$utm_content}
    ";
            if($utm_term)     $body .= "utm_term: {$utm_term}
    ";
            if($referrer)     $body .= "referrer: {$referrer}
    ";
        }
        $headers = [
            'MIME-Version: 1.0',
            'Content-type: text/plain; charset=UTF-8',
            'From: '.$CONFIG['brand'].' <no-reply@'.($_SERVER['HTTP_HOST'] ?? 'localhost').'>',
            'Reply-To: '.$email,
        ];

        // Send
        $sent = @mail($to, $subject, $body, implode("
    ", $headers));
        if ($sent) {
            $form_success = true;
            // rotate token to avoid resubmission
            $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
            $csrf_token = $_SESSION['csrf_token'];
        } else {
            $form_errors[] = 'Sending failed. Please try later.';
        }
    }
}

?>
<!doctype html>
<html lang="uk">
    <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title><?= htmlspecialchars($CONFIG['brand']) ?> — Portfolio</title>
    <meta name="description" content="<?= htmlspecialchars($CONFIG['brand']) ?> — професійний фотограф, <?= htmlspecialchars($CONFIG['city']) ?>. Весілля, love story, випускні альбоми, хрестини, персональні зйомки." />
    <meta property="og:title" content="<?= htmlspecialchars($CONFIG['brand']) ?>" />
    <meta property="og:description" content="Wedding, love story, family & portraits in <?= htmlspecialchars($CONFIG['city']) ?>." />
    <meta property="og:type" content="website" />
    <meta property="og:image" content="https://images.unsplash.com/photo-1526772662000-3f88f10405ff?w=1200" />
    <meta name="robots" content="index,follow,max-image-preview:large" />
    <link rel="canonical" href="<?= htmlspecialchars($canonical) ?>" />
    <meta property="og:site_name" content="<?= htmlspecialchars($CONFIG['brand']) ?>" />
    <meta property="og:url" content="<?= htmlspecialchars($canonical) ?>" />
    <meta property="og:locale" content="uk_UA" />
    <meta property="og:locale:alternate" content="en_US" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="<?= htmlspecialchars($CONFIG['brand']) ?>" />
    <meta name="twitter:description" content="Wedding, love story, family & portraits in <?= htmlspecialchars($CONFIG['city']) ?>." />
    <meta name="theme-color" content="#ffffff" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="preconnect" href="https://images.unsplash.com" crossorigin>
                                            <link rel="preload" as="image" href="https://images.unsplash.com/photo-1526772662000-3f88f10405ff?w=1600" imagesrcset="https://images.unsplash.com/photo-1526772662000-3f88f10405ff?w=800 800w, https://images.unsplash.com/photo-1526772662000-3f88f10405ff?w=1200 1200w, https://images.unsplash.com/photo-1526772662000-3f88f10405ff?w=1600 1600w" imagesizes="(max-width: 980px) 92vw, 50vw" />
    <link href="https://fonts.googleapis.com/css2?family=Cormorant+Garamond:wght@500;600&family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <style>
    :root{
    --bg:#ffffff; --text:#0e0e0e; --muted:#666; --accent:#0e0e0e; --border:#ececec;
    --radius:12px; --space:28px;
  }
    *{box-sizing:border-box}
    html,body{height:100%}
    html{scroll-behavior:smooth}
    body{
    margin:0; font-family:Inter, system-ui, -apple-system, "Segoe UI", Roboto, Arial, sans-serif;
    color:var(--text); background:var(--bg); -webkit-font-smoothing:antialiased; -moz-osx-font-smoothing:grayscale;
    transition:opacity .5s ease;
    }
    html:not(.is-ready) body{opacity:0}
    img{max-width:100%; display:block}
    a{color:inherit; text-decoration:none}
    .container{width:min(1100px, 92vw); margin:0 auto}
    
    /* Header */
    .header{position:fixed; inset:0 0 auto 0; z-index:50; background:transparent; border-bottom:1px solid transparent; transition:background .35s ease, border-color .35s ease}
    .header--solid{background:rgba(255,255,255,.75); backdrop-filter:saturate(180%) blur(10px); border-color:var(--border)}
    .header__row{display:flex; align-items:center; justify-content:space-between; padding:18px 0}
    .logo{font-family:"Cormorant Garamond", serif; font-weight:600; font-size:26px; letter-spacing:.02em}
    .nav{display:flex; gap:24px; align-items:center}
    .nav__link{position:relative; padding:8px 0; text-transform:uppercase; font-size:12px; letter-spacing:.14em}
    .nav__link::after{content:""; position:absolute; left:0; right:0; bottom:-6px; height:1px; background:transparent; transition:background .25s ease}
    .nav__link:hover::after{background:#000}
    .lang{display:flex; gap:8px; align-items:center}
    .lang__btn{font-size:11px; padding:6px 10px; border:1px solid var(--border); border-radius:999px; cursor:pointer; background:#fff}
    .lang__btn--active{background:#000; color:#fff; border-color:#000}
    .burger{display:none; width:36px; height:36px; border:1px solid var(--border); border-radius:10px; align-items:center; justify-content:center; cursor:pointer; background:#fff}
    .burger span{width:18px; height:2px; background:#111; position:relative; display:block}
    .burger span::before,.burger span::after{content:""; position:absolute; left:0; right:0; height:2px; background:#111}
    .burger span::before{top:-6px} .burger span::after{top:6px}
    .nav--mobile{display:none; flex-direction:column; gap:6px; padding:8px 0}
    
    /* Hero */
    .hero{min-height:92vh; display:grid; place-items:center; position:relative; isolation:isolate; padding:0}
    .hero::before{content:""; position:absolute; inset:0; background:linear-gradient(180deg, rgba(0,0,0,.28), rgba(0,0,0,.08) 40%, rgba(255,255,255,0)); z-index:0}
    .hero::after{content:""; position:absolute; inset:0; background:var(--hero) center/cover no-repeat; z-index:-1; transform:translateY(calc(var(--parallax,0)*-1px)); transition:transform .2s ease}
    .hero__inner{padding-top:86px; padding-bottom:46px; text-align:center; color:#111}
    .hero__kicker{letter-spacing:.18em; text-transform:uppercase; font-size:12px; color:#444; margin-bottom:14px}
    .hero__title{font-family:"Cormorant Garamond", serif; font-weight:600; font-size:64px; line-height:1.03; margin:0 0 10px; letter-spacing:-.01em}
    .hero__text{color:#333; margin:0 auto 24px; font-size:18px; max-width:680px}
    .btn{display:inline-flex; align-items:center; justify-content:center; gap:10px; padding:12px 18px; border-radius:999px; border:1px solid #111; background:#111; color:#fff; cursor:pointer; transition:transform .25s ease}
    .btn:hover{transform:translateY(-1px)}
    .btn--ghost{background:transparent; color:#111}
    
    /* Section */
    .section{padding:110px 0 96px}
    .section__head{display:flex; align-items:flex-end; justify-content:space-between; gap:20px; margin-bottom:28px}
    .section__title{font-family:"Cormorant Garamond", serif; font-weight:600; font-size:40px; margin:0}
    .section__sub{color:var(--muted)}
    
    /* Gallery → Masonry via CSS columns (no JS lib) */
    .grid{column-count:3; column-gap:16px}
    .grid__item{break-inside:avoid; margin:0 0 16px; border-radius:12px; overflow:hidden; background:#f3f3f3}
    .grid__item img{width:100%; height:auto; display:block; transform:scale(1.02); transition:transform .6s ease, filter .6s ease; filter:saturate(.9)}
    .grid__item:hover img{transform:scale(1.05); filter:saturate(1)}
    .grid__badge{display:none}
    
    /* Pricing → minimalist list */
    .cards{display:block}
    .card{display:flex; align-items:baseline; gap:18px; padding:18px 0; border-bottom:1px solid var(--border); border-radius:0}
    .card:first-child{border-top:1px solid var(--border)}
    .card__title{font-weight:600; min-width:160px}
    .price{font-family:"Cormorant Garamond", serif; font-size:28px; margin-left:auto}
    .features{display:flex; gap:14px; flex-wrap:wrap}
    .features li{list-style:none; color:#333}
    
    /* About */
    .about{display:grid; grid-template-columns:1.1fr .9fr; gap:40px; align-items:center}
    .about__photo{border-radius:12px; overflow:hidden}
    
    /* Testimonials → editorial quotes */
    .review{border:none; padding:0; position:relative}
    .review::before{content:'“'; position:absolute; left:-8px; top:-8px; font-family:"Cormorant Garamond", serif; font-size:54px; line-height:1; color:#000; opacity:.15}
    .review .muted{font-size:18px; color:#222}
    .review__name{margin-top:8px; color:#555}
    .reviews{display:grid; grid-template-columns:repeat(3, 1fr); gap:28px}
    
    /* Process */
    .steps{display:grid; grid-template-columns:repeat(4, 1fr); gap:18px}
    .step{border:1px solid var(--border); border-radius:12px; padding:18px}
    .step__num{font-family:"Cormorant Garamond", serif; font-size:24px}
    
    /* Contact */
    .form{display:grid; grid-template-columns:1fr 1fr; gap:14px}
    .form .full{grid-column:1/-1}
    .input{width:100%; padding:12px 14px; border:1px solid var(--border); border-radius:10px; background:#fff}
    .checkbox{display:flex; align-items:flex-start; gap:10px}
    .note{font-size:13px; color:var(--muted)}
    .alert{padding:12px 14px; border-radius:12px; margin-bottom:14px}
    .alert--ok{background:#e8f8ee; border:1px solid #bfe7cc}
    .alert--err{background:#fdecec; border:1px solid #f4b7b7}
    
    /* Footer */
    .skip-link{position:absolute;left:-9999px;top:auto;width:1px;height:1px;overflow:hidden}
    .skip-link:focus{left:12px;top:12px;width:auto;height:auto;background:#000;color:#fff;padding:8px 12px;border-radius:8px;z-index:9999}
    .footer{padding:64px 0; border-top:1px solid var(--border); color:var(--muted)}
    
    /* Reveal */
    .reveal{opacity:0; transform:translateY(10px); transition:opacity .6s ease, transform .6s ease}
    .reveal--visible{opacity:1; transform:none}
    
    @media (max-width: 1100px){ .hero__title{font-size:56px} }
    @media (max-width: 980px){
       .about{grid-template-columns:1fr}
       .grid{column-count:2}
       .reviews{grid-template-columns:1fr}
       .steps{grid-template-columns:repeat(2, 1fr)}
       .form{grid-template-columns:1fr}
       .nav{display:none}
       .burger{display:flex}
       .nav--mobile{display:flex}
  }
    @media (max-width: 560px){ .grid{column-count:1} .hero__title{font-size:40px} }
    @media (prefers-reduced-motion: reduce){ *{animation:none !important; transition:none !important} }

    /* HERO text improvements */
    .hero__title,
    .hero__text {
                                            color: #fff; /* белый текст */
                                            text-shadow: 0 2px 6px rgba(0,0,0,0.5); /* мягкая тень для читаемости */
  }

    .hero::before {
                                            background: linear-gradient(180deg, rgba(0,0,0,0.4), rgba(0,0,0,0.15) 40%, rgba(255,255,255,0));
  }

    /* Portfolio filter buttons */
    .filter {
                                            display: flex;
                                            gap: 10px;
                                            flex-wrap: wrap;
                                            margin-bottom: 30px;
  }

    .filter__btn {
                                            padding: 8px 16px;
                                            border-radius: 999px;
                                            border: 1px solid #ccc;
                                            background: #fff;
                                            font-size: 14px;
                                            cursor: pointer;
                                            transition: all 0.25s ease;
  }

    .filter__btn:hover {
                                            background: #000;
                                            color: #fff;
                                            border-color: #000;
  }

    .filter__btn--active {
                                            background: #000;
                                            color: #fff;
                                            border-color: #000;
  }

    /* Reviews */
    .review::before{content:none!important}
    .review{padding-left:0}
    
    /* Pricing */
    .price{
    display:inline-flex;
    align-items:baseline;
    gap:8px;
    font-family:"Cormorant Garamond", serif;
    font-size:28px;
    letter-spacing:.01em;
    font-variant-numeric:lining-nums tabular-nums;
  }
    .price .currency{
    font-family:Inter, system-ui, -apple-system, "Segoe UI", Roboto, Arial, sans-serif;
    font-size:18px;
    line-height:1;
    transform:translateY(-1px);
    opacity:.9;
  }

    </style>
    <noscript><style>.reveal{opacity:1!important;transform:none!important}</style></noscript>
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@graph": [
        {
          "@type": "WebSite",
          "name": <?= json_encode($CONFIG['brand'], JSON_UNESCAPED_UNICODE) ?>,
          "url": <?= json_encode($canonical, JSON_UNESCAPED_UNICODE) ?>
        },
        {
          "@type": "Person",
          "name": "Valeria",
          "jobTitle": "Photographer",
          "image": "https://images.unsplash.com/photo-1520813792240-56fc4a3765a7?w=600",
          "worksFor": {"@type": "LocalBusiness", "name": <?= json_encode($CONFIG['brand'], JSON_UNESCAPED_UNICODE) ?>},
          "knowsLanguage": ["uk", "en"],
          "url": <?= json_encode($canonical, JSON_UNESCAPED_UNICODE) ?>
        },
        {
          "@type": "LocalBusiness",
          "name": <?= json_encode($CONFIG['brand'], JSON_UNESCAPED_UNICODE) ?>,
          "address": {"@type":"PostalAddress","addressLocality": <?= json_encode($CONFIG['city'], JSON_UNESCAPED_UNICODE) ?>, "addressCountry":"UA"},
          "areaServed": {"@type":"City","name": <?= json_encode($CONFIG['city'], JSON_UNESCAPED_UNICODE) ?>},
          "contactPoint": {"@type": "ContactPoint", "contactType": "customer support", "email": <?= json_encode($CONFIG['admin_email'], JSON_UNESCAPED_UNICODE) ?>},
          "url": <?= json_encode($canonical, JSON_UNESCAPED_UNICODE) ?>
        },
        {
          "@type": "OfferCatalog",
          "name": "Photography packages",
          "itemListElement": [
            {"@type":"Offer","name":"Standard","price":"3500","priceCurrency":"UAH"},
            {"@type":"Offer","name":"Premium","price":"7000","priceCurrency":"UAH"},
            {"@type":"Offer","name":"Wedding","price":"18000","priceCurrency":"UAH"}
          ]
        }
      ]
    }
    </script>
    </head>
    <body>
    <a class="skip-link" href="#home">Skip to content</a>
    <header class="header" aria-label="Main navigation">
    <div class="container">
    <div class="header__row">
    <div class="logo"><?= htmlspecialchars($CONFIG['brand']) ?></div>
    <nav class="nav" role="navigation" aria-label="Primary">
    <a class="nav__link" href="#home" data-i18n="nav_home">Головна</a>
    <a class="nav__link" href="#portfolio" data-i18n="nav_portfolio">Портфоліо</a>
    <a class="nav__link" href="#pricing" data-i18n="nav_pricing">Ціни</a>
    <a class="nav__link" href="#about" data-i18n="nav_about">Про мене</a>
    <a class="nav__link" href="#contact" data-i18n="nav_contact">Контакти</a>
    </nav>
    <div class="lang">
    <button class="lang__btn" data-lang="uk">UA</button>
    <button class="lang__btn" data-lang="en">EN</button>
    <button class="burger" aria-label="Menu"><span></span></button>
    </div>
    </div>
    <nav class="nav nav--mobile" role="navigation" aria-label="Mobile">
    <a class="nav__link" href="#home" data-i18n="nav_home">Головна</a>
    <a class="nav__link" href="#portfolio" data-i18n="nav_portfolio">Портфоліо</a>
    <a class="nav__link" href="#pricing" data-i18n="nav_pricing">Ціни</a>
    <a class="nav__link" href="#about" data-i18n="nav_about">Про мене</a>
    <a class="nav__link" href="#contact" data-i18n="nav_contact">Контакти</a>
    </nav>
    </div>
    </header>
    
    <main>
    <!-- HERO -->
    <section id="home" class="hero" style="--hero:url('https://images.unsplash.com/photo-1526772662000-3f88f10405ff?w=1600')">
    <div class="container hero__inner">
    <div class="hero__kicker">VALERIA PHOTO</div>
    <h1 class="hero__title" data-i18n="hero_title">Світло. Почуття. Історії, що залишаються.</h1>
    <p class="hero__text" data-i18n="hero_text">Весілля, lovestory, сімейні та персональні зйомки у <?= htmlspecialchars($CONFIG['city']) ?> та по всій Україні.</p>
    <div style="display:flex; gap:12px; justify-content:center; flex-wrap:wrap">
    <a href="#portfolio" class="btn" data-i18n="cta_view_work">Подивитись роботи</a>
    <a href="#contact" class="btn btn--ghost" data-i18n="cta_book">Забронювати зйомку</a>
    </div>
    </div>
    </section>

    <!-- GALLERY -->
    <section id="portfolio" class="section">
    <div class="container">
    <div class="section__head">
    <h2 class="section__title" data-i18n="portfolio_title">Портфоліо</h2>
    <div class="section__sub muted" data-i18n="portfolio_sub">Вибірка з останніх зйомок</div>
    </div>
    <div class="filter">
    <button class="filter__btn filter__btn--active" data-filter="all" data-i18n="filter_all">Усі</button>
    <button class="filter__btn" data-filter="wedding" data-i18n="filter_wedding">Весілля</button>
    <button class="filter__btn" data-filter="love" data-i18n="filter_love">Love Story</button>
    <button class="filter__btn" data-filter="graduation" data-i18n="filter_grad">Випускні альбоми</button>
    <button class="filter__btn" data-filter="christening" data-i18n="filter_christening">Хрестини</button>
    <button class="filter__btn" data-filter="personal" data-i18n="filter_personal">Персональні</button>
    </div>
    <div class="grid" id="gallery">
    <?php
    // demo gallery items (replace with your images)
    $items = [
    ['cat'=>'wedding','img'=>'https://images.unsplash.com/photo-1522673607200-164d1b6ce486?w=1200','label'=>'Wedding'],
    ['cat'=>'love','img'=>'https://images.unsplash.com/photo-1518640467707-6811f4a6ab73?w=1200','label'=>'Love Story'],
    ['cat'=>'graduation','img'=>'https://images.unsplash.com/photo-1520975922284-5a810fda9664?w=1200','label'=>'Graduation'],
    ['cat'=>'christening','img'=>'https://images.unsplash.com/photo-1519741497674-611481863552?w=1200','label'=>'Christening'],
    ['cat'=>'personal','img'=>'https://images.unsplash.com/photo-1503341733017-1901578f9b84?w=1200','label'=>'Portrait'],
    ['cat'=>'wedding','img'=>'https://images.unsplash.com/photo-1519741496292-0f0ef3d6c7d1?w=1200','label'=>'Wedding'],
    ['cat'=>'love','img'=>'https://images.unsplash.com/photo-1494790108377-be9c29b29330?w=1200','label'=>'Love Story'],
    ['cat'=>'graduation','img'=>'https://images.unsplash.com/photo-1512100356356-de1b84283e18?w=1200','label'=>'Graduation'],
    ['cat'=>'personal','img'=>'https://images.unsplash.com/photo-1517841905240-472988babdf9?w=1200','label'=>'Portrait'],
  ];
                                            foreach($items as $i=>$it): ?>
                                              <figure class="grid__item reveal" data-cat="<?= htmlspecialchars($it['cat']) ?>">
                                              <img src="<?= htmlspecialchars($it['img']) ?>" alt="<?= htmlspecialchars($it['label']) ?>" loading="lazy" data-index="<?= $i ?>">
                                              <figcaption class="grid__badge"><?= htmlspecialchars($it['label']) ?></figcaption>
                                              </figure>
    <?php endforeach; ?>
    </div>
    </div>
    </section>

    <!-- PRICING -->
    <section id="pricing" class="section">
    <div class="container">
    <div class="section__head">
    <h2 class="section__title" data-i18n="pricing_title">Пакети та ціни</h2>
    <div class="section__sub muted" data-i18n="pricing_sub">Прозоро та без сюрпризів</div>
    </div>
    <div class="cards">
    <div class="card reveal">
    <h3 class="card__title" data-i18n="pack_standard">Стандарт</h3>
    <p class="price"><span class="currency"><?= htmlspecialchars($CONFIG['currency']) ?></span><span data-i18n="price_standard">3500</span></p>
    <ul class="features">
    <li>• <span data-i18n="feat_std_1">60–90 хв зйомки</span></li>
    <li>• <span data-i18n="feat_std_2">30+ фото з базовою корекцією</span></li>
    <li>• <span data-i18n="feat_std_3">5 ретушованих портретів</span></li>
    <li class="muted" data-i18n="feat_std_4">Готовність до 5 днів</li>
    </ul>
    </div>
    <div class="card reveal">
    <h3 class="card__title" data-i18n="pack_premium">Преміум</h3>
    <p class="price"><span class="currency"><?= htmlspecialchars($CONFIG['currency']) ?></span><span data-i18n="price_premium">7000</span></p>
    <ul class="features">
    <li>• <span data-i18n="feat_pr_1">до 3 годин зйомки</span></li>
    <li>• <span data-i18n="feat_pr_2">100+ фото з корекцією</span></li>
    <li>• <span data-i18n="feat_pr_3">15 ретушованих портретів</span></li>
    <li class="muted" data-i18n="feat_pr_4">Консультація зі стилю</li>
    </ul>
    </div>
    <div class="card reveal">
    <h3 class="card__title" data-i18n="pack_wedding">Весільний</h3>
    <p class="price"><span class="currency"><?= htmlspecialchars($CONFIG['currency']) ?></span><span data-i18n="price_wedding">18000</span></p>
    <ul class="features">
    <li>• <span data-i18n="feat_wed_1">8 годин репортажу</span></li>
    <li>• <span data-i18n="feat_wed_2">Від 400 фото</span></li>
    <li>• <span data-i18n="feat_wed_3">Онлайн-галерея для гостей</span></li>
    <li class="muted" data-i18n="feat_wed_4">Тизер фото за 48 год</li>
    </ul>
    </div>
    </div>
    </div>
    </section>

    <!-- ABOUT -->
    <section id="about" class="section">
    <div class="container about">
    <div class="about__photo reveal">
    <img src="https://images.unsplash.com/photo-1520813792240-56fc4a3765a7?w=1000" alt="Valeria portrait" loading="lazy">
    </div>
    <div>
    <h2 class="section__title" data-i18n="about_title">Валерія — фотограф з любов’ю до світла</h2>
    <p class="muted" data-i18n="about_text_1">Я знімаю щирі історії про людей і для людей. Мені важливо, щоб фото було про вас — ваші почуття, характер, зв’язок.</p>
    <p class="muted" data-i18n="about_text_2">Працюю в Одесі та подорожую на зйомки по Україні. Люблю природне світло, спокійні кольори й невимушені кадри.</p>
    </div>
    </div>
    </section>

    <!-- TESTIMONIALS -->
    <section class="section">
    <div class="container">
    <div class="section__head">
    <h2 class="section__title" data-i18n="rev_title">Відгуки</h2>
    <div class="section__sub muted" data-i18n="rev_sub">Трохи тепла від клієнтів</div>
    </div>
    <div class="reviews">
    <div class="review reveal">
    <div class="muted" data-i18n="rev_1_text">Фото перевершили очікування! Дуже легко і комфортно на зйомці.</div>
    <div class="review__name">— Daria</div>
    </div>
    <div class="review reveal">
    <div class="muted" data-i18n="rev_2_text">Весільний день пролетів, але ці кадри — назавжди. Дякуємо!</div>
    <div class="review__name">— Andrii & Iryna</div>
    </div>
    <div class="review reveal">
    <div class="muted" data-i18n="rev_3_text">Делікатна ретуш, природні кольори — саме те, що я хотіла.</div>
    <div class="review__name">— Kateryna</div>
    </div>
    </div>
    </div>
    </section>

    <!-- PROCESS -->
    <section class="section">
    <div class="container">
    <div class="section__head">
    <h2 class="section__title" data-i18n="proc_title">Як відбувається зйомка</h2>
    <div class="section__sub muted" data-i18n="proc_sub">Коротко про кроки</div>
    </div>
    <div class="steps">
    <div class="step reveal"><div class="step__num">1</div><div class="muted" data-i18n="proc_1">Заявка та консультація</div></div>
    <div class="step reveal"><div class="step__num">2</div><div class="muted" data-i18n="proc_2">Підбір локації та образу</div></div>
    <div class="step reveal"><div class="step__num">3</div><div class="muted" data-i18n="proc_3">Зйомка</div></div>
    <div class="step reveal"><div class="step__num">4</div><div class="muted" data-i18n="proc_4">Відбір, корекція, готові фото</div></div>
    </div>
    </div>
    </section>

    <!-- CONTACT -->
    <section id="contact" class="section">
    <div class="container">
    <div class="section__head">
    <h2 class="section__title" data-i18n="contact_title">Зв’язатися</h2>
    <div class="section__sub muted" data-i18n="contact_sub">Розкажіть, що хочете зняти — я на зв’язку</div>
    </div>

                                            <?php if ($form_success): ?>
                                              <div class="alert alert--ok" data-i18n="form_success">Дякую! Я отримала вашу заявку і відповім найближчим часом.</div>
    <?php endif; ?>
                                            <?php if ($form_errors): ?>
                                              <div class="alert alert--err">
                                              <?php foreach($form_errors as $e): ?>
                                                <div><?= htmlspecialchars($e) ?></div>
                                              <?php endforeach; ?>
                                              </div>
    <?php endif; ?>
    
    <form method="post" class="form" novalidate>
    <input type="hidden" name="csrf_token" value="<?= htmlspecialchars($csrf_token) ?>">
    <input type="hidden" name="form_name" value="booking">
    <!-- Honeypot -->
    <input type="text" name="company" style="display:none" tabindex="-1" autocomplete="off" />
    <!-- UTM tracking (auto-filled) -->
    <input type="hidden" name="utm_source" id="utm_source" />
    <input type="hidden" name="utm_medium" id="utm_medium" />
    <input type="hidden" name="utm_campaign" id="utm_campaign" />
    <input type="hidden" name="utm_content" id="utm_content" />
    <input type="hidden" name="utm_term" id="utm_term" />
    <input type="hidden" name="referrer" id="utm_referrer" />
    
    <label class="full">
    <span class="muted" data-i18n="f_name">Ім’я</span>
    <input class="input" name="name" type="text" required placeholder="Ваше ім’я">
    </label>
    
    <label>
    <span class="muted" data-i18n="f_email">Email</span>
    <input class="input" name="email" type="email" required placeholder="name@example.com">
    </label>
    
    <label>
    <span class="muted" data-i18n="f_phone">Телефон</span>
    <input class="input" name="phone" type="tel" placeholder="+380 ...">
    </label>
    
    <label>
    <span class="muted" data-i18n="f_type">Тип зйомки</span>
    <select class="input select" name="shoot_type">
    <option value="Wedding" data-i18n="opt_wedding">Весілля</option>
    <option value="Love Story" data-i18n="opt_love">Love Story</option>
    <option value="Graduation" data-i18n="opt_grad">Випускні альбоми</option>
    <option value="Christening" data-i18n="opt_christening">Хрестини</option>
    <option value="Personal" data-i18n="opt_personal">Персональна</option>
    </select>
    </label>
    
    <label>
    <span class="muted" data-i18n="f_date">Дата</span>
    <input class="input" name="date" type="date">
    </label>
    
    <label class="full">
    <span class="muted" data-i18n="f_msg">Повідомлення</span>
    <textarea class="input" name="message" rows="4" placeholder="Кілька слів про зйомку"></textarea>
    </label>
    
    <label class="checkbox full">
    <input type="checkbox" name="agree" required>
    <span class="note" data-i18n="f_agree">Я погоджуюсь на обробку персональних даних.</span>
    </label>
    
    <div class="full" style="display:flex; gap:10px; flex-wrap:wrap">
    <button class="btn" type="submit" data-i18n="f_send">Надіслати</button>
    <a href="mailto:<?= htmlspecialchars($CONFIG['admin_email']) ?>" class="btn btn--ghost" aria-label="Email">Email</a>
    </div>
    </form>
    </div>
    </section>
    </main>
    
    <footer class="footer">
    <div class="container" style="display:flex; flex-wrap:wrap; gap:10px; align-items:center; justify-content:space-between">
    <div class="muted">© <?= date('Y') ?> <?= htmlspecialchars($CONFIG['brand']) ?> · <?= htmlspecialchars($CONFIG['city']) ?></div>
    <div class="muted">Instagram · Telegram</div>
    </div>
    </footer>
    
    <!-- Lightbox overlay -->
    <div class="lightbox" id="lightbox" role="dialog" aria-modal="true" aria-label="Gallery preview">
    <button class="lightbox__close" aria-label="Close" id="lbClose">✕</button>
    <button class="lightbox__prev" aria-label="Previous" id="lbPrev">‹</button>
    <img class="lightbox__img" id="lbImg" alt="Preview">
    <button class="lightbox__next" aria-label="Next" id="lbNext">›</button>
    </div>
    
    <script>
    // ================= I18N =================
    const I18N = {
                                            en: {
                                              nav_home: 'Home', nav_portfolio:'Portfolio', nav_pricing:'Pricing', nav_about:'About', nav_contact:'Contact',
                                                  hero_title:'Light. Emotion. Stories that stay.',
                                                  hero_text:'Weddings, love stories, family and portraits in Odesa and across Ukraine.',
                                                  cta_view_work:'View Work', cta_book:'Book a Session',
                                                  portfolio_title:'Portfolio', portfolio_sub:'Selection of recent shoots',
                                                  filter_all:'All', filter_wedding:'Wedding', filter_love:'Love Story', filter_grad:'Graduation', filter_christening:'Christening', filter_personal:'Personal',
                                                  pricing_title:'Packages & Pricing', pricing_sub:'Transparent, no surprises',
                                                  pack_standard:'Standard', pack_premium:'Premium', pack_wedding:'Wedding',
                                                  price_standard:'3500', price_premium:'7000', price_wedding:'18000',
                                                  feat_std_1:'60–90 min shoot', feat_std_2:'30+ edited photos', feat_std_3:'5 retouched portraits', feat_std_4:'Delivery within 5 days',
                                                  feat_pr_1:'up to 3 hours', feat_pr_2:'100+ edited photos', feat_pr_3:'15 retouched portraits', feat_pr_4:'Styling consultation',
                                                  feat_wed_1:'8 hours coverage', feat_wed_2:'400+ photos', feat_wed_3:'Online gallery for guests', feat_wed_4:'Teaser within 48h',
                                                  about_title:'Valeria — photographer with love for light',
                                              about_text_1:'I capture honest stories about people and for people. Photos are about you: your feelings, character, connection.',
                                                  about_text_2:'Based in Odesa, available across Ukraine. Natural light, calm colors, effortless frames.',
                                                  rev_title:'Testimonials', rev_sub:'A bit of warmth from clients',
                                                  rev_1_text:'Photos exceeded expectations! The shoot felt easy and comfortable.',
                                                  rev_2_text:'The wedding day flew by, but these frames will stay forever. Thank you!',
                                                  rev_3_text:'Delicate retouch, natural colors — exactly what I wanted.',
                                                  proc_title:'How a shoot works', proc_sub:'Quick steps',
                                                  proc_1:'Inquiry & consultation', proc_2:'Location & styling', proc_3:'Shooting', proc_4:'Selection, edit, delivery',
                                                  contact_title:'Get in touch', contact_sub:'Tell me about your idea — I’m listening',
                                                  form_success:'Thanks! I got your request and will reply shortly.',
                                                  f_name:'Name', f_email:'Email', f_phone:'Phone', f_type:'Shoot type', f_date:'Date', f_msg:'Message', f_agree:'I agree to the processing of personal data.', f_send:'Send',
                                                  opt_wedding:'Wedding', opt_love:'Love Story', opt_grad:'Graduation', opt_christening:'Christening', opt_personal:'Personal'
                                            },
                                            uk: {
                                              nav_home: 'Головна', nav_portfolio:'Портфоліо', nav_pricing:'Ціни', nav_about:'Про мене', nav_contact:'Контакти',
                                                  hero_title:'Світло. Почуття. Історії, що залишаються.',
                                                  hero_text:'Весілля, lovestory, сімейні та персональні зйомки у Одесі та по всій Україні.',
                                                  cta_view_work:'Подивитись роботи', cta_book:'Забронювати зйомку',
                                                  portfolio_title:'Портфоліо', portfolio_sub:'Вибірка з останніх зйомок',
                                                  filter_all:'Усі', filter_wedding:'Весілля', filter_love:'Love Story', filter_grad:'Випускні альбоми', filter_christening:'Хрестини', filter_personal:'Персональні',
                                                  pricing_title:'Пакети та ціни', pricing_sub:'Прозоро та без сюрпризів',
                                                  pack_standard:'Стандарт', pack_premium:'Преміум', pack_wedding:'Весільний',
                                                  price_standard:'3500', price_premium:'7000', price_wedding:'18000',
                                                  feat_std_1:'60–90 хв зйомки', feat_std_2:'30+ фото з базовою корекцією', feat_std_3:'5 ретушованих портретів', feat_std_4:'Готовність до 5 днів',
                                                  feat_pr_1:'до 3 годин зйомки', feat_pr_2:'100+ фото з корекцією', feat_pr_3:'15 ретушованих портретів',
                                                  feat_pr_4:'Консультація зі стилю',
                                                  feat_wed_1:'8 годин репортажу', feat_wed_2:'Від 400 фото', feat_wed_3:'Онлайн-галерея для гостей', feat_wed_4:'Тизер фото за 48 год',
                                                  about_title:'Валерія — фотограф з любов’ю до світла',
                                                  about_text_1:'Я знімаю щирі історії про людей і для людей. Мені важливо, щоб фото було про вас — ваші почуття, характер, зв’язок.',
                                                  about_text_2:'Працюю в Одесі та подорожую на зйомки по Україні. Люблю природне світло, спокійні кольори й невимушені кадри.',
                                                  rev_title:'Відгуки', rev_sub:'Трохи тепла від клієнтів',
                                                  rev_1_text:'Фото перевершили очікування! Дуже легко і комфортно на зйомці.',
                                                  rev_2_text:'Весільний день пролетів, але ці кадри — назавжди. Дякуємо!',
                                                  rev_3_text:'Делікатна ретуш, природні кольори — саме те, що я хотіла.',
                                                  proc_title:'Як відбувається зйомка', proc_sub:'Коротко про кроки',
                                                  proc_1:'Заявка та консультація', proc_2:'Підбір локації та образу', proc_3:'Зйомка', proc_4:'Відбір, корекція, готові фото',
                                                  contact_title:'Зв’язатися', contact_sub:'Розкажіть, що хочете зняти — я на зв’язку',
                                                  form_success:'Дякую! Я отримала вашу заявку і відповім найближчим часом.',
                                                  f_name:'Ім’я', f_email:'Email', f_phone:'Телефон', f_type:'Тип зйомки', f_date:'Дата', f_msg:'Повідомлення', f_agree:'Я погоджуюсь на обробку персональних даних.', f_send:'Надіслати',
                                                  opt_wedding:'Весілля', opt_love:'Love Story', opt_grad:'Випускні альбоми', opt_christening:'Хрестини', opt_personal:'Персональна'
                                            }
  };

    const langBtns = document.querySelectorAll('.lang__btn');
    const i18nNodes = document.querySelectorAll('[data-i18n]');

    function setLang(lang){
    localStorage.setItem('lang', lang);
    langBtns.forEach(b=>b.classList.toggle('lang__btn--active', b.dataset.lang === lang));
    i18nNodes.forEach(el=>{
    const key = el.getAttribute('data-i18n');
    if(I18N[lang] && I18N[lang][key]){ el.textContent = I18N[lang][key]; }
  });
                                            document.documentElement.lang = lang === 'en' ? 'en' : 'uk';
  }

    langBtns.forEach(b=> b.addEventListener('click', ()=> setLang(b.dataset.lang)));
    setLang(localStorage.getItem('lang') || '<?= $CONFIG['lang_default'] ?>');

    // ================= Page ready
    document.addEventListener('DOMContentLoaded',()=> document.documentElement.classList.add('is-ready'));

    // ================= Header appearance on scroll (minimalist + parallax)
    (function(){
    const header = document.querySelector('.header');
    const hero = document.querySelector('.hero');
    function onScroll(){
    const y = window.scrollY || 0;
    if(y > 8){ header.classList.add('header--solid'); } else { header.classList.remove('header--solid'); }
    hero && (hero.style.setProperty('--parallax', Math.min(y*0.2, 60)));
  }
    onScroll();
    window.addEventListener('scroll', onScroll, {passive:true});
  })();

    // ================= Smooth scroll
    $(document).on('click', 'a[href^="#"]', function(e){
    const target = $($(this).attr('href'));
                                            if (target.length){ e.preventDefault(); $('html,body').animate({scrollTop: target.offset().top - 70}, 600); }
  });

    // ================= Mobile nav toggle
    $('.burger').on('click', function(){ $('.nav--mobile').slideToggle(180); });
    $('.nav--mobile .nav__link').on('click', function(){ $('.nav--mobile').slideUp(180); });

    // ================= Reveal on scroll
    const io = new IntersectionObserver((entries)=>{
    entries.forEach(en=>{ if(en.isIntersecting){ en.target.classList.add('reveal--visible'); io.unobserve(en.target);} });
  }, {threshold:.15});
    document.querySelectorAll('.reveal').forEach(el=> io.observe(el));

    // ================= Gallery filter
    $('.filter__btn').on('click', function(){
    $('.filter__btn').removeClass('filter__btn--active');
    $(this).addClass('filter__btn--active');
    const f = $(this).data('filter');
    $('#gallery .grid__item').each(function(){
    const show = f === 'all' || $(this).data('cat') === f;
                                            $(this).stop().fadeTo(200, show ? 1 : 0).css('pointer-events', show? 'auto':'none');
    $(this).toggle(show);
  });
  });

    // ================= Lightbox
    const lb = document.getElementById('lightbox');
    const lbImg = document.getElementById('lbImg');
    const lbClose = document.getElementById('lbClose');
    const lbPrev = document.getElementById('lbPrev');
    const lbNext = document.getElementById('lbNext');
    const imgs = Array.from(document.querySelectorAll('#gallery img'));
    let idx = 0;

    function openLB(i){ idx=i; lbImg.src=imgs[idx].src; lb.style.display='flex'; document.body.style.overflow='hidden'; }
    function closeLB(){ lb.style.display='none'; document.body.style.overflow='auto'; }
    function prev(){ idx = (idx - 1 + imgs.length) % imgs.length; lbImg.src = imgs[idx].src; }
    function next(){ idx = (idx + 1) % imgs.length; lbImg.src = imgs[idx].src; }
    imgs.forEach((im, i)=> im.addEventListener('click', ()=> openLB(i)));
    lbClose.addEventListener('click', closeLB);
    lbPrev.addEventListener('click', prev);
    lbNext.addEventListener('click', next);
    lb.addEventListener('click', (e)=>{ if(e.target===lb) closeLB(); });
    document.addEventListener('keydown', (e)=>{ if(lb.style.display==='flex'){ if(e.key==='Escape') closeLB(); if(e.key==='ArrowLeft') prev(); if(e.key==='ArrowRight') next(); }});

    // ================= UTM capture & persist (90 days)
    (function(){
    const qs = new URLSearchParams(location.search);
    const keys = ['utm_source','utm_medium','utm_campaign','utm_content','utm_term'];
    const data = {};
    keys.forEach(k=>{ const v = qs.get(k); if(v) data[k]=v; });
                                            const ref = document.referrer && document.referrer.indexOf(location.origin) === -1 ? document.referrer : '';
    if(ref) data['referrer'] = ref;
    if(Object.keys(data).length){
                                            localStorage.setItem('utm_data', JSON.stringify({ ...JSON.parse(localStorage.getItem('utm_data')||'{}'), ...data, ts: Date.now() }));
  }
    const saved = JSON.parse(localStorage.getItem('utm_data')||'{}');
    if(saved.ts && (Date.now() - saved.ts) > 90*24*60*60*1000){ localStorage.removeItem('utm_data'); }
    const fill = (id, k)=>{ const el=document.getElementById(id); if(el && saved[k]) el.value = saved[k]; };
    ['utm_source','utm_medium','utm_campaign','utm_content','utm_term'].forEach(k=> fill(k,k));
    const r = document.getElementById('utm_referrer'); if(r && (saved.referrer||ref)) r.value = saved.referrer || ref;
    })();
    </script>

                                            <!-- GA4 (optional): Replace G-XXXXXXX with your Measurement ID -->
    <script>
    document.querySelectorAll('.price').forEach(p=>{
    const cur=p.querySelector('.currency'); if(!cur) return;
    const num=p.querySelector('span:not(.currency)');
    if(!num) return;
    const v=+num.textContent.replace(/\D+/g,'');
    if(!isNaN(v)) num.textContent=new Intl.NumberFormat('uk-UA').format(v);
    });
    </script>
    
    <!--
    ===============================================
                                            SMTP (Optional):
    For production-grade delivery, integrate PHPMailer.
                                            Quick steps (server access required):
    1) composer require phpmailer/phpmailer
    2) Replace mail() call with PHPMailer SMTP block.
    3) Fill SMTP creds from your provider.

                                            Example (pseudo):
    // $mail = new PHPMailer(true);
    // $mail->isSMTP();
    // $mail->Host = 'smtp.yourhost.com';
    // $mail->SMTPAuth = true;
    // $mail->Username = 'user';
    // $mail->Password = 'pass';
    // $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
    // $mail->Port = 587;
    // $mail->setFrom('no-reply@domain', 'Valeria Photo');
    // $mail->addAddress($CONFIG['admin_email']);
    // $mail->Subject = $subject;
    // $mail->Body = $body;
    // $mail->send();
    ===============================================
    -->
    </body>
    </html>
    
    как поднятьл этот сайт
                                            ChatGPT сказал:

    Думал на протяжении 42s
    Классный одностраничник 👍
                                            Ниже — самый короткий путь «поднять» сайт тремя способами: локально, на обычном хостинге и на VPS. Выбирай сценарий, делай по шагам — всё заработает.

    1) Быстрый локальный запуск (для проверки)
                                            Требования: PHP ≥ 8.1 (у тебя random_bytes() и ?? — это PHP 7+, лучше 8.1+).

  # В папке с index.php
    php -S localhost:8000
    Открой http://localhost:8000
                                            Почта через mail() локально обычно не работает — это нормально для теста. Проверь форму: валидируется ли, меняется ли токен CSRF и т.д.

    2) Shared-хостинг (cPanel/Timeweb/Hostpro и т.п.) — самый простой прод
    В панели выбери PHP 8.1+ для домена.
    
    Задай домен/поддомен → корень сайта public_html/ (или указанный хостингом).
    
    Залей index.php (и favicon/иконки, если есть) в корень сайта.

                                            В коде поменяй admin_email на рабочий:

    'admin_email' => 'your@domain.com'
    Включи HTTPS/Let’s Encrypt в панели (обычно 1 клик).

                                            Почта:

    Если mail() у хостера отключён/нестабилен, включи SMTP (см. раздел ниже).

                                            Обнови DNS: SPF/DKIM/DMARC для домена, чтобы письма не падали в спам (в cPanel это «Email Deliverability»).

                                            Проверь форму (отправка/получение писем). Если видишь «Invalid session token»:

    Убедись, что домен открывается по одному адресу (либо с www, либо без) и по HTTPS — иначе сессия/куки могут «скакать».
    
    Проверь, что браузер не блокирует cookies.

                                            Права на файлы: обычно 644 для файлов, 755 для папок (по умолчанию у хостингов уже так).

    3) VPS (Ubuntu + Nginx + PHP-FPM) — полностью под своим контролем
                                            Команды для Ubuntu 22.04/24.04:

  # Обновление и установка
    sudo apt update
    sudo apt install -y nginx php8.2-fpm php8.2-cli unzip
    
    # Каталог сайта
    sudo mkdir -p /var/www/valeriaphoto
    sudo chown -R $USER:www-data /var/www/valeriaphoto

  # Скопируй index.php в /var/www/valeriaphoto/
                                            Конфиг Nginx /etc/nginx/sites-available/valeriaphoto:

    server {
    server_name valeriaphoto.com www.valeriaphoto.com;
    root /var/www/valeriaphoto;
    index index.php;

    client_max_body_size 10m;

    location / {
    try_files $uri /index.php?$args;
    }

    location ~ \.php$ {
    include snippets/fastcgi-php.conf;
    fastcgi_pass unix:/run/php/php8.2-fpm.sock;
    }

    # Базовые заголовки безопасности (минимум)
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
  }
                                            Активируем сайт и HTTPS:

    sudo ln -s /etc/nginx/sites-available/valeriaphoto /etc/nginx/sites-enabled/
    sudo nginx -t && sudo systemctl reload nginx
    
    # Let's Encrypt
    sudo apt install -y certbot python3-certbot-nginx
    sudo certbot --nginx -d valeriaphoto.com -d www.valeriaphoto.com --redirect -m you@email.com --agree-tos -n
    Готово. Проверь в браузере по HTTPS.

                                            Почта: как сделать, чтобы письма реально доходили
    В коде сейчас mail() — на дешёвых/жёстко настроенных серверах это часто не доставляет.

                                            Вариант А: настроить DNS для mail()
                                            В панели хостинга включить SPF/DKIM/DMARC для домена отправителя (у тебя сейчас From: no-reply@<host>). Лучше, чтобы From был с твоего домена: no-reply@valeriaphoto.com.

    После правок — подождать обновления DNS и протестировать.

                                            Вариант Б (рекомендуется): SMTP через PHPMailer
    Самое стабильное — внешний SMTP (например, почтовый провайдер/SMTP от хостинга, SendGrid, Mailgun, Gmail SMTP).
                                            Шаги:

    composer require phpmailer/phpmailer (на VPS) или залить PHPMailer в проект.
    
    Заменить участок с mail() на SMTP-блок (у тебя внизу уже есть пример-чертёж).
    
    Взять Host, Username, Password, Port, SMTPSecure у провайдера SMTP.
    
    Отправитель должен совпадать с доменом, у которого настроены SPF/DKIM.
    
    Если не пользуешься Composer на shared-хостинге — можно подключить PHPMailer как plain-PHP библиотеку (через require), это тоже работает.
    
    Что важно проверить перед продом (чек-лист)
    admin_email задан и читаемый ящик существует.
    
    Сайт открывается строго по одному каноническому домену и HTTPS.
    
    Форма отправляется, валидация работает, письмо уходит и попадает в Inbox (не в спам).

                                            Локаль/язык: кнопки UA/EN переключают все data-i18n.

    Картинки грузятся быстро (Unsplash ок, но на проде лучше свои сжатые копии).
    
    Сессии работают (в PHP включены session, на VPS — папка для session.save_path доступна).
    
    Заголовки безопасности добавлены (см. Nginx блок; на Apache — аналоги через .htaccess).

                                            Роботам: robots мета уже стоит, canonical формируется корректно.

    Частые проблемы и быстрые решения
    Invalid session token — заходишь по одному домену (без/с www) и по HTTPS; очисти кэш/куки. На VPS проверь session.save_path (обычно /var/lib/php/sessions).
    
    Письма не приходят — сначала проверь SPF/DKIM/DMARC у домена, затем переходи на SMTP.
    
    Кириллица в письмах «кракозябрами» — у тебя уже charset=UTF-8, заголовки ок.
    
    Форма «тихо» молчит — временно включи логирование ошибок PHP и посмотри error_log (на shared-хостинге — в корне сайта).
    
    Если скажешь, какой вариант ты выбрал (shared/VPS/домен), накину готовые конфиги/точные кнопки для твоего провайдера, а также дам готовый SMTP-фрагмент под выбранный сервис.

                                            Вы сказали:
    на маке
                                            ChatGPT сказал:

    Думал на протяжении 40s
    Окей, на macOS — вот три простых способа поднять твой сайт. Начни с самого короткого (№1).
    
    1) Самый быстрый способ (встроенный сервер PHP)
                                            Установи PHP через Homebrew (если не установлен):

    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    brew install php
    php -v   # должно показать 8.x
                                            Перейди в папку с index.php и запусти сервер:

    cd /путь/к/папке/сайта
    php -S 127.0.0.1:8000
                                            Открой в браузере: http://127.0.0.1:8000

                                            Примечание: mail() локально почти всегда не отправит письмо — это нормально для теста UI. Для реальной отправки см. блок «Почта» ниже.

    2) Через MAMP (GUI, «в пару кликов»)
    Скачай MAMP (бесплатный) и установи.

                                            Скопируй проект в:
    /Applications/MAMP/htdocs/valeriaphoto
    
    Включи серверы в MAMP, PHP выбери 8.1+ (в Preferences).

                                            Открой: http://localhost:8888/valeriaphoto/

    3) Красиво с локальным доменом и HTTPS (Laravel Valet)
    Идеально на Mac, чтобы сайт открывался как https://valeriaphoto.test со всеми куками/сессиями как в проде.
    
    brew install php composer
    composer global require laravel/valet
    ~/.composer/vendor/bin/valet install   # или ~/.config/composer/vendor/bin/valet install
    cd /путь/к/папке/сайта
    valet park      # запомнит папку; любой проект внутри будет доступен как *.test
    valet link valeriaphoto
    valet secure valeriaphoto   # включит HTTPS для домена
                                            Открой: https://valeriaphoto.test

    Почта (как протестировать отправку писем на Маке)
    Твой код сейчас использует mail(). Для локала лучше перехватывать письма в «почтовый ящик разработчика», не отправляя их наружу.

                                            Вариант А (рекомендую): Mailpit (или MailHog) как тестовый SMTP

    brew install mailpit
    mailpit   # поднимет веб-интерфейс на http://127.0.0.1:8025 и SMTP на 127.0.0.1:1025
                                            Дальше временно переключись с mail() на SMTP через PHPMailer (у тебя уже есть заготовка внизу файла):

                                            Host: 127.0.0.1, Port: 1025, без авторизации и шифрования.

    Все письма увидишь в браузере на http://127.0.0.1:8025.

                                            Вариант Б: не трогать код сейчас
    Просто прими, что на локале отправка может «не уходить». На проде подключишь SMTP (SendGrid/Mailgun/хостинг).
    
    Частые нюансы на Маке
    Если видишь Invalid session token — открой сайт строго по одному адресу (лучше HTTPS-домен в Valet), не миксуй localhost и 127.0.0.1.
    
    Для кириллицы в письмах у тебя уже charset=UTF-8 — ок.
    
    Если галерея / шрифты не грузятся — у тебя внешние ссылки (Unsplash/Google Fonts). Интернет должен быть доступен.
    
    Если скажешь, что выбираешь (встроенный сервер, MAMP или Valet), могу дать точные команды/правки под твой вариант (в т.ч. готовый фрагмент PHPMailer для Mailpit).

                                            Вы сказали:
    я хочу залить этот проект на свой гит
                                            ChatGPT сказал:

    Думал на протяжении 23s
    Отлично! Ниже — быстрый чек-лист, как залить твой проект в Git (на macOS) и отправить на GitHub. Подойдёт и для GitLab/Bitbucket — меняется только URL репозитория.
    
    0) Установить и настроить Git (один раз)
    brew install git
    git --version
    git config --global user.name "Alexey"
    git config --global user.email "you@example.com"
    1) В корне проекта (там, где index.php)
    Создай .gitignore и (по желанию) README.md.

                                            .gitignore (для PHP-проекта + macOS):

  # macOS
    .DS_Store
    # IDE
    .idea/
    .vscode/
    # PHP / Composer
    /vendor/
    /composer.phar
    # Env/секреты
    .env
    .env.*
    # Node (если появится фронт-сборка)
    node_modules/
  # Логи/кэш
    *.log
    .cache/
                                            README.md (минимум):

  # Valeria Photo – Single Page Portfolio (PHP)

    Однофайловый сайт (`index.php`), PHP 8.1+, без фреймворков.
                                            Локально: `php -S 127.0.0.1:8000`

                                              - i18n (UA/EN), CSRF, honeypot
                                              - SEO/OG/JSON-LD
                                              - UTM → письмо
                                            Инициализируй репозиторий и сделай первый коммит:

    git init
    git add .
                                            git commit -m "Initial commit: Valeria Photo single-page"
    2) Создать репозиторий и запушить
    Вариант А — через GitHub CLI (самый быстрый)
    brew install gh
    gh auth login    # войти в GitHub
    gh repo create valeriaphoto --public --source=. --remote=origin --push
                                            Готово: репо создано и код запушен.

    Вариант Б — вручную через сайт GitHub
    На github.com → New repository → valeriaphoto (Public/Private).
    
    Скопируй HTTPS URL репо (например, https://github.com/username/valeriaphoto.git).

                                            Привяжи и отправь:

    git branch -M main
    git remote add origin https://github.com/username/valeriaphoto.git
    git push -u origin main
    3) (Опционально) Git LFS для тяжёлых фото
                                            Если позже добавишь много изображений в репозиторий:

    brew install git-lfs
    git lfs install
    git lfs track "*.jpg" "*.jpeg" "*.png"
    git add .gitattributes
                                            git commit -m "chore: enable Git LFS for images"
    git push
    4) Теги/релизы (по желанию)
    git tag -a v0.1.0 -m "Initial release"
    git push origin v0.1.0
    5) Что не коммитить
    Пароли/SMTP-ключи/секреты (храни в .env, а .env — в .gitignore).
    
    vendor/ (если подключишь Composer/PHPMailer) — чаще не коммитят, а ставят на сервере composer install.
    
    Если скажешь свой GitHub ник/имя репозитория, дам готовую команду git remote add origin ... именно под тебя. Также могу сгенерировать простой GitHub Actions workflow для авто-деплоя на хостинг по SFTP/SSH.

                                            Вы сказали:
    виндовс
                                            ChatGPT сказал:

    Думал на протяжении 18s
                                            Ок, на Windows. Ниже — самый простой путь запушить твой проект (с index.php) на GitHub. Дам 3 варианта: через Git Bash/PowerShell, через GitHub Desktop (GUI) и через GitHub CLI.

    Вариант A — Git Bash / PowerShell (классика)
    1) Установка Git

                                            Скачай «Git for Windows»: https://git-scm.com/download/win и установи.

    В инсталляторе оставь по умолчанию Git Credential Manager (упростит вход в GitHub).
    
    2) Открой папку проекта
    
    # PowerShell
    cd "C:\path\to\your\project"
    3) Создай .gitignore и (по желанию) README.md
                                            .gitignore (минимум для PHP-проекта на Windows):

  # OS
    .DS_Store
    Thumbs.db
    desktop.ini
    
    # IDE
    .idea/
    .vscode/
    
    # PHP/Composer
    /vendor/
    /composer.phar
    .env
    .env.*
    
    # Node (если появится)
    node_modules/

  # Logs/Cache
    *.log
    .cache/
                                            (Опционально) .gitattributes, чтобы не путались переводы строк между Windows/Mac/Linux:

    * text=auto
    *.php  text eol=lf
    *.js   text eol=lf
    *.css  text eol=lf
    *.html text eol=lf
    4) Инициализируй репозиторий и сделай первый коммит
    
    git init
    git config user.name  "Alexey"
    git config user.email "you@example.com"
    
    git add .
                                            git commit -m "Initial commit: Valeria Photo single-page"
    git branch -M main
    5) Создай пустой репозиторий на GitHub
                                            На сайте GitHub → New → Repository name: valeriaphoto (Public/Private — как хочешь).
                                            Скопируй HTTPS-URL вида:

    https://github.com/<YOUR_USERNAME>/valeriaphoto.git
    6) Привяжи удалённый и запушь
    
    git remote add origin https://github.com/<YOUR_USERNAME>/valeriaphoto.git
    git push -u origin main
    Впервые спросит вход в GitHub — войди, Git Credential Manager сохранит токен.
    
    Вариант B — GitHub Desktop (без команд)
    Скачай https://desktop.github.com и войди в GitHub.
    
    File → Add Local Repository… → укажи папку проекта.
    
    Внизу напиши коммит-сообщение → Commit to main.
    
    Нажми Publish repository → выбери Private/Public → Publish.
    
    Готово.
    
    Вариант C — GitHub CLI (быстро в терминале)
                                            Установи:

    winget install GitHub.cli
                                            Логин:

    gh auth login
                                            В корне проекта:

    git init
    git add .
                                            git commit -m "Initial commit: Valeria Photo single-page"
    git branch -M main
    
    # создать репозиторий на GitHub и сразу запушить
    gh repo create valeriaphoto --public --source=. --remote=origin --push
    # если хочешь приватный: --private
    (Опционально) Git LFS для фотографий
                                            Если позже добавишь много JPG/PNG в репозиторий:

    winget install Git.GitLFS
    git lfs install
    git lfs track "*.jpg" "*.jpeg" "*.png"
    git add .gitattributes
                                            git commit -m "chore: enable Git LFS for images"
    git push
    (Опционально) Единые переводы строк
                                            Чтобы глобально не «ломало» строки на Windows:

  # Один из вариантов:
    git config --global core.autocrlf true   # Win-редакторы -> CRLF, в репо хранится LF
    # либо строго через .gitattributes (см. выше) — тогда можно core.autocrlf оставить по умолчанию
    Если скажешь свой ник на GitHub и желаемое имя репозитория — скину готовую команду git remote add origin ... именно под тебя + могу накидать workflow GitHub Actions для автодеплоя по SFTP/SSH.

                                            Вы сказали:
    у меня есть гит
                                            ChatGPT сказал:

    Думал на протяжении 13s
    Отлично, тогда просто запушим проект. Ниже — самый короткий путь, если Git уже стоит.
    
    Быстрый сценарий (новый репозиторий на GitHub)
                                            В корне проекта (где index.php):

    git init
    git add .
                                            git commit -m "Initial commit: Valeria Photo single-page"
    git branch -M main
                                            Создай пустой репозиторий на GitHub (через сайт). Скопируй его HTTPS-URL, например:

    https://github.com/<YOUR_USERNAME>/valeriaphoto.git
                                            Привяжи и запушь:

    git remote add origin https://github.com/<YOUR_USERNAME>/valeriaphoto.git
    git push -u origin main
    Готово 🎉
    
    Если репозиторий на GitHub уже создан
                                            В корне проекта:

    git init
    git add .
    git commit -m "Initial commit"
    git branch -M main
    git remote add origin https://github.com/<YOUR_USERNAME>/<REPO>.git
    git push -u origin main
    Если удалённый уже добавлен (проверка)
    git remote -v
                                            Если origin есть — просто:

    git push -u origin main
                                            Если ветка называется master:

    git push -u origin master
    Полезные мелочи
                                            .gitignore (минимум для PHP):

    .DS_Store
    Thumbs.db
    desktop.ini
    .idea/
    .vscode/
    vendor/
    composer.phar
    .env
    .env.*
    node_modules/
    *.log
    .cache/
                                            Частые ошибки:

    src refspec main does not match any — нет коммита. Сделай git add . && git commit -m "...".

                                            Updates were rejected because the remote contains work... — в удалённой ветке уже есть коммиты. Либо:

    git pull --rebase origin main
    git push
    либо пушь в другую ветку и сделай PR.
    
    Если скинешь свой URL репозитория, напишу точную команду git remote add origin ... для твоего случая.

                                            Вы сказали:
    Загруженное изображение
                                            ChatGPT сказал:

    Думал на протяжении 29s
                                            Вижу причину по скриншоту: ты находишься в ветке master, а пушишь в main. Поэтому и ошибка src refspec main does not match any. Ещё и origin уже добавлен — это нормально.

    Есть 2 пути. Выбери любой.

                                            Вариант 1 (проще): пушим текущую ветку master
    git push -u origin master
    После этого на GitHub появится ветка master с твоим кодом.

                                            Вариант 2: переименовать master → main и пушить в main
    git branch -M main
    git push -u origin main
    Если на GitHub репозиторий уже инициализирован с README в main
                                            Тогда при пуше может ругнуться на «истории не связаны». Два способа:

                                            A. Аккуратно слить истории (сохранит README):

    git branch -M main
    git pull origin main --allow-unrelated-histories
    # при необходимости реши конфликты, закоммить изменения
    git push -u origin main
                                            B. Полностью заменить удалённый main своим (перезапись!):

    git branch -M main
    git push -u origin main --force-with-lease
                                            После успешного пуша:

    проверь git remote -v (что пушится в нужный URL),
    
    на GitHub при необходимости сделай main веткой по умолчанию (Settings → Branches).

                                            Дальше обычный цикл:

    git add .
                                            git commit -m "fix: tweaks"
    git push
    Если ещё что-то ругнётся — скинь точный текст ошибки, подскажу.

                                            Вы сказали:
    теперь я хочу чтоб этот сайт видели другие по ссылке гит
                                            ChatGPT сказал:

    Думал на протяжении 1m 1s
                                            Если хочешь «ссылку с Git», самый простой путь — GitHub Pages. Важно: Pages — только статик (PHP не выполняется). Сайт откроется, но отправка формы не будет работать. Если нужно именно с рабочим PHP-бэкендом — напишу варианты ниже.

                                            Вариант A: GitHub Pages (быстро показать сайт)
                                            В репозитории создай файл: .github/workflows/pages.yml со следующим содержимым:

                                            name: Deploy to GitHub Pages
                                            on:
                                              push:
                                                branches: [ main ]   # или master, если у тебя master
                                              workflow_dispatch:

                                            permissions:
                                              contents: read
                                              pages: write
                                              id-token: write

                                            concurrency:
                                              group: "pages"
                                              cancel-in-progress: true

                                            jobs:
                                              build:
                                                runs-on: ubuntu-latest
                                                steps:
                                                  - uses: actions/checkout@v4
                                                  - uses: shivammathur/setup-php@v2
                                                    with:
                                                      php-version: '8.2'
                                                  - name: Render PHP to static HTML
                                                    run: |
                                                      mkdir dist
                                                      php -d variables_order=EGPCS index.php > dist/index.html
                                                  - uses: actions/upload-pages-artifact@v3
                                                    with:
                                                      path: dist
                                              deploy:
                                                needs: build
                                                runs-on: ubuntu-latest
                                                environment:
                                                  name: github-pages
                                                  url: ${{ steps.deployment.outputs.page_url }}
                                                steps:
                                                  - id: deployment
                                                    uses: actions/deploy-pages@v4
                                            Закоммить и запушь этот файл:

    git add .github/workflows/pages.yml
                                            git commit -m "chore: deploy to GitHub Pages"
    git push
                                            В репозитории: Settings → Pages → Build and deployment → Source: GitHub Actions.
                                            Ссылка будет вида: https://<твой_ник>.github.io/<имя_репо>/.

                                            Замечания:

    Каноникал сейчас соберётся как http://localhost/ (это ок для демки).
                                            Хочешь красивый canonical? Добавь в index.php сразу после вычисления $canonical:

    if (getenv('PUBLIC_URL')) { $canonical = rtrim(getenv('PUBLIC_URL'), '/'); }
                                            и в workflow в шаг Render PHP... перед командой укажи переменную:

                                            env:
                                              PUBLIC_URL: https://<ник>.github.io/<репо>
    Форма отправки на Pages работать не будет (нет PHP). Для демки можно временно подключить Formspree/EmailJS, либо оставить как есть.

                                            Вариант B: нужна рабочая форма (PHP) по ссылке из Git
                                            Подходит любой хостинг/VPS с автодеплоем из GitHub:

                                            Shared-хостинг: подключи «Deploy from GitHub» (у многих есть), укажи ветку main, корень public_html (или свой).

                                            VPS: Nginx+PHP-FPM и GitHub Actions, который по SSH/SFTP выкладывает файлы. Могу дать готовый workflow под твой сервер.

                                            PaaS (Render/Railway/Koyeb и т.п.): создаёшь Web Service из репозитория, выбираешь PHP образ/шаблон — платформа сама будет подтягивать код из GitHub при пушах.

    Скажи, какой путь выбираешь (Pages для демки или полноценный PHP-хостинг) — настрою под тебя конкретно (workflow/конфиг/SSH-деплой).

                                            Вы сказали:
    без бекенда
                                            ChatGPT сказал:

    Думал на протяжении 51s
    Отлично, делаем GitHub Pages без бэкенда (PHP выполняться не будет, но страницу «соберём» на CI и отдадим как статик).
    
    Что сделаем
    На CI запустим PHP и сгенерируем dist/index.html из твоего index.php.
    
    Задеплоим dist/ на GitHub Pages.
    
    (Опционально) Подключим сервис формы без бэкенда (Formspree).
    
    1) Чуть поправим index.php (каноникал)
                                            Сразу после строки, где ты собираешь $canonical, вставь это:

    if (getenv('PUBLIC_URL')) {
    $canonical = rtrim(getenv('PUBLIC_URL'), '/');
  }
    Это позволит прокинуть адрес сайта из CI, чтобы <link rel="canonical"> и OG-URL были правильными.
    
    2) Добавь workflow для GitHub Pages
                                            Создай файл .github/workflows/pages.yml в репозитории с таким содержимым (заменил URL на твой):

                                            name: Deploy to GitHub Pages
                                            on:
                                              push:
                                                branches: [ main, master ]   # какая у тебя ветка — так и сработает
                                              workflow_dispatch:

                                            permissions:
                                              contents: read
                                              pages: write
                                              id-token: write

                                            concurrency:
                                              group: "pages"
                                              cancel-in-progress: true

                                            jobs:
                                              build:
                                                runs-on: ubuntu-latest
                                                steps:
                                                  - uses: actions/checkout@v4

                                                  - uses: shivammathur/setup-php@v2
                                                    with:
                                                      php-version: '8.2'

                                                  - name: Build static site from PHP
                                                    env:
                                                      PUBLIC_URL: https://fugerson.github.io/valeriaphoto
                                                    run: |
                                                      mkdir -p dist
                                                      # если есть локальные файлы (иконки и т.п.), скопируй их:
                                                      rsync -av --exclude '.git*' --exclude '.github' --exclude 'vendor' --exclude '*.php' ./ dist/ || true
                                                      # рендерим index.php в статический HTML
                                                      php -d variables_order=EGPCS index.php > dist/index.html

                                                  - uses: actions/upload-pages-artifact@v3
                                                    with:
                                                      path: dist

                                              deploy:
                                                needs: build
                                                runs-on: ubuntu-latest
                                                environment:
                                                  name: github-pages
                                                  url: ${{ steps.deployment.outputs.page_url }}
                                                steps:
                                                  - id: deployment
                                                    uses: actions/deploy-pages@v4
                                            Закоммить и запушь:

    git add .github/workflows/pages.yml
                                            git commit -m "chore: GitHub Pages CI (render PHP -> static)"
    git push
                                            В репозитории открой Settings → Pages и в блоке Build and deployment выбери Source: GitHub Actions.
                                            Твой публичный адрес будет: https://fugerson.github.io/valeriaphoto/

    3) (Опционально) Форма без бэкенда
                                            GitHub Pages не обрабатывает POST. Если хочешь, чтобы форма отправлялась «как письмо» без сервера — подключи, например, Formspree:

    Создай форму на https://formspree.io (получишь endpoint вида https://formspree.io/f/xxxxx).

                                            В твоём HTML измени тег <form>:

    <form method="POST" action="https://formspree.io/f/XXXXX" class="form" novalidate>
                                            <!-- поля как есть: name, email, phone, shoot_type, date, message ... -->
    <!-- можно добавить скрытые -->
    <input type="hidden" name="_subject" value="New Booking Request — Valeria Photo">
    <input type="hidden" name="_redirect" value="https://fugerson.github.io/valeriaphoto/#contact?sent=1">
    </form>
    Удали сугубо серверные элементы из формы (CSRF, honeypot можешь оставить, но смысла нет на статиках).
    
    В JS можно показать сообщение об успехе, если в URL есть ?sent=1.
    
    Если форма не нужна — ничего не трогай, просто кнопка отправки на Pages работать не будет (POST не поддержан).
    
    Готово
                                            После успешного прогона workflow сайт доступен по ссылке:
    https://fugerson.github.io/valeriaphoto/
    
    Нужно — помогу подключить кастомный домен (CNAME) или настрою статичную форму именно под твои поля.

                                            Вы сказали:
    Загруженное изображение
                                            Твой публичный адрес будет: https://fugerson.github.io/valeriaphoto/ выдало 404
                                            ChatGPT сказал:

    Думал на протяжении 40s
                                            Поймал проблему: сейчас GitHub Pages деплоит только статические файлы, а в репо у тебя index.php (без index.html). Поэтому при открытии
    https://fugerson.github.io/valeriaphoto/ — 404.

                                            Решение: на GitHub Actions перед деплоем «пререндерим» index.php в dist/index.html и уже dist/ отдадим на Pages.

    1) (необязательно, но красиво) поправка каноникала в index.php
                                            Сразу после вычисления $canonical добавь:

    if (getenv('PUBLIC_URL')) {
    $canonical = rtrim(getenv('PUBLIC_URL'), '/');
  }
    2) Добавь workflow для Pages (или замени тот, что «Static HTML»)
                                            Создай файл .github/workflows/pages.yml (или открой тот, что создал «Configure» и замени содержимое) на такое:

                                            name: Deploy to GitHub Pages
                                            on:
                                              push:
                                                branches: [ master, main ]   # оставь здесь твою ветку; у тебя раньше была master
                                              workflow_dispatch:

                                            permissions:
                                              contents: read
                                              pages: write
                                              id-token: write

                                            concurrency:
                                              group: "pages"
                                              cancel-in-progress: true

                                            jobs:
                                              build:
                                                runs-on: ubuntu-latest
                                                steps:
                                                  - uses: actions/checkout@v4

                                                  - uses: shivammathur/setup-php@v2
                                                    with:
                                                      php-version: '8.2'

                                                  - name: Build static site from PHP
                                                    env:
                                                      PUBLIC_URL: https://fugerson.github.io/valeriaphoto
                                                    run: |
                                                      mkdir -p dist
                                                      # скопируй любые статические файлы, если появятся
                                                      rsync -av --exclude '.git*' --exclude '.github' --exclude 'vendor' --exclude '*.php' ./ dist/ || true
                                                      # рендерим index.php в статический HTML
                                                      php -d variables_order=EGPCS index.php > dist/index.html

                                                  - uses: actions/upload-pages-artifact@v3
                                                    with:
                                                      path: dist

                                              deploy:
                                                needs: build
                                                runs-on: ubuntu-latest
                                                environment:
                                                  name: github-pages
                                                  url: ${{ steps.deployment.outputs.page_url }}
                                                steps:
                                                  - id: deployment
                                                    uses: actions/deploy-pages@v4
                                            Закоммить и запушь:

    git add .github/workflows/pages.yml
                                            git commit -m "ci: render PHP -> static and deploy to Pages"
    git push
    3) Проверь запуск
    В репозитории вкладка Actions → должен пройти workflow «Deploy to GitHub Pages».

                                            В Settings → Pages убедись, что Source: GitHub Actions (на скрине у тебя так и есть).

    Как только джоб «deploy» зелёный — ссылка https://fugerson.github.io/valeriaphoto/ заработает.
    
    Почему 404 был
    Шаблон “Static HTML” без правок просто берёт файлы как есть. Поскольку index.html в корне нет (только index.php), на прод выкатывается пусто → 404.
    
    Если вдруг всё сделал и всё ещё пусто — кинь сюда лог из Actions (красная строка шага Build static site from PHP), скажу, что поправить.
    
    
    ц
    
    
    Файл не выбранФайл не выбран
    ChatGPT может допускать ошибки. Рекомендуем проверять важную информацию.
